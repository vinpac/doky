{"version":3,"file":"static/chunks//pages/test/fixtures/Basic.mdx.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/create.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/get-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/set-prototype-of.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/symbol/iterator.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/assertThisInitialized.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/createClass.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/getPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/inherits.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutProperties.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/setPrototypeOf.js","webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/typeof.js","webpack:///./node_modules/@mdx-js/tag/dist/index.js","webpack:///./node_modules/@mdx-js/tag/dist/mdx-provider.js","webpack:///./node_modules/@mdx-js/tag/dist/mdx-tag.js","webpack:///./node_modules/core-js/library/fn/object/create.js","webpack:///./node_modules/core-js/library/fn/object/get-prototype-of.js","webpack:///./node_modules/core-js/library/fn/object/set-prototype-of.js","webpack:///./node_modules/core-js/library/fn/symbol/index.js","webpack:///./node_modules/core-js/library/fn/symbol/iterator.js","webpack:///./node_modules/core-js/library/modules/_set-proto.js","webpack:///./node_modules/core-js/library/modules/es6.object.create.js","webpack:///./node_modules/core-js/library/modules/es6.object.get-prototype-of.js","webpack:///./node_modules/core-js/library/modules/es6.object.set-prototype-of.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.async-iterator.js","webpack:///./node_modules/core-js/library/modules/es7.symbol.observable.js","webpack:///./test/fixtures/Basic.mdx"],"sourcesContent":["module.exports = require(\"core-js/library/fn/object/create\");","module.exports = require(\"core-js/library/fn/object/get-prototype-of\");","module.exports = require(\"core-js/library/fn/object/set-prototype-of\");","module.exports = require(\"core-js/library/fn/symbol\");","module.exports = require(\"core-js/library/fn/symbol/iterator\");","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _Object$defineProperty from \"../../core-js/object/define-property\";\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n\n    _Object$defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _Object$getPrototypeOf from \"../../core-js/object/get-prototype-of\";\nimport _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _getPrototypeOf(o) {\n  _getPrototypeOf = _Object$setPrototypeOf ? _Object$getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import _Object$create from \"../../core-js/object/create\";\nimport setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import _Object$getOwnPropertySymbols from \"../../core-js/object/get-own-property-symbols\";\nimport objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (_Object$getOwnPropertySymbols) {\n    var sourceSymbolKeys = _Object$getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","import _Object$keys from \"../../core-js/object/keys\";\nexport default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n\n  var sourceKeys = _Object$keys(source);\n\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","import _Object$setPrototypeOf from \"../../core-js/object/set-prototype-of\";\nexport default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = _Object$setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import _Symbol$iterator from \"../../core-js/symbol/iterator\";\nimport _Symbol from \"../../core-js/symbol\";\n\nfunction _typeof2(obj) { if (typeof _Symbol === \"function\" && typeof _Symbol$iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof _Symbol === \"function\" && _typeof2(_Symbol$iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof _Symbol === \"function\" && obj.constructor === _Symbol && obj !== _Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _mdxTag = require('./mdx-tag');\n\nObject.defineProperty(exports, 'MDXTag', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_mdxTag).default;\n  }\n});\n\nvar _mdxProvider = require('./mdx-provider');\n\nObject.defineProperty(exports, 'MDXProvider', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_mdxProvider).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.withMDXComponents = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nvar _React$createContext = _react2.default.createContext({}),\n    Provider = _React$createContext.Provider,\n    Consumer = _React$createContext.Consumer;\n\nvar withMDXComponents = function withMDXComponents(Component) {\n  return function (_ref) {\n    var components = _ref.components,\n        props = _objectWithoutProperties(_ref, ['components']);\n\n    return _react2.default.createElement(\n      Consumer,\n      null,\n      function (contextComponents) {\n        return _react2.default.createElement(Component, _extends({ components: components || contextComponents }, props));\n      }\n    );\n  };\n};\n\nexports.withMDXComponents = withMDXComponents;\nvar MDXProvider = function MDXProvider(_ref2) {\n  var components = _ref2.components,\n      children = _ref2.children;\n  return _react2.default.createElement(\n    Provider,\n    { value: components },\n    children\n  );\n};\n\nexports.default = MDXProvider;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _mdxProvider = require('./mdx-provider');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar defaults = {\n  inlineCode: 'code',\n  wrapper: 'div'\n};\n\nvar MDXTag = function (_Component) {\n  _inherits(MDXTag, _Component);\n\n  function MDXTag() {\n    _classCallCheck(this, MDXTag);\n\n    return _possibleConstructorReturn(this, (MDXTag.__proto__ || Object.getPrototypeOf(MDXTag)).apply(this, arguments));\n  }\n\n  _createClass(MDXTag, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          name = _props.name,\n          parentName = _props.parentName,\n          _props$props = _props.props,\n          childProps = _props$props === undefined ? {} : _props$props,\n          children = _props.children,\n          _props$components = _props.components,\n          components = _props$components === undefined ? {} : _props$components,\n          Layout = _props.Layout,\n          layoutProps = _props.layoutProps;\n\n\n      var Component = components[parentName + '.' + name] || components[name] || defaults[name] || name;\n\n      if (Layout) {\n        return _react2.default.createElement(\n          Layout,\n          _extends({ components: components }, layoutProps),\n          _react2.default.createElement(\n            Component,\n            childProps,\n            children\n          )\n        );\n      }\n\n      return _react2.default.createElement(\n        Component,\n        childProps,\n        children\n      );\n    }\n  }]);\n\n  return MDXTag;\n}(_react.Component);\n\nexports.default = (0, _mdxProvider.withMDXComponents)(MDXTag);","require('../../modules/es6.object.create');\nvar $Object = require('../../modules/_core').Object;\nmodule.exports = function create(P, D) {\n  return $Object.create(P, D);\n};\n","require('../../modules/es6.object.get-prototype-of');\nmodule.exports = require('../../modules/_core').Object.getPrototypeOf;\n","require('../../modules/es6.object.set-prototype-of');\nmodule.exports = require('../../modules/_core').Object.setPrototypeOf;\n","require('../../modules/es6.symbol');\nrequire('../../modules/es6.object.to-string');\nrequire('../../modules/es7.symbol.async-iterator');\nrequire('../../modules/es7.symbol.observable');\nmodule.exports = require('../../modules/_core').Symbol;\n","require('../../modules/es6.string.iterator');\nrequire('../../modules/web.dom.iterable');\nmodule.exports = require('../../modules/_wks-ext').f('iterator');\n","// Works with __proto__ only. Old v8 can't work with null proto objects.\n/* eslint-disable no-proto */\nvar isObject = require('./_is-object');\nvar anObject = require('./_an-object');\nvar check = function (O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line\n    function (test, buggy, set) {\n      try {\n        set = require('./_ctx')(Function.call, require('./_object-gopd').f(Object.prototype, '__proto__').set, 2);\n        set(test, []);\n        buggy = !(test instanceof Array);\n      } catch (e) { buggy = true; }\n      return function setPrototypeOf(O, proto) {\n        check(O, proto);\n        if (buggy) O.__proto__ = proto;\n        else set(O, proto);\n        return O;\n      };\n    }({}, false) : undefined),\n  check: check\n};\n","var $export = require('./_export');\n// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\n$export($export.S, 'Object', { create: require('./_object-create') });\n","// 19.1.2.9 Object.getPrototypeOf(O)\nvar toObject = require('./_to-object');\nvar $getPrototypeOf = require('./_object-gpo');\n\nrequire('./_object-sap')('getPrototypeOf', function () {\n  return function getPrototypeOf(it) {\n    return $getPrototypeOf(toObject(it));\n  };\n});\n","// 19.1.3.19 Object.setPrototypeOf(O, proto)\nvar $export = require('./_export');\n$export($export.S, 'Object', { setPrototypeOf: require('./_set-proto').set });\n","require('./_wks-define')('asyncIterator');\n","require('./_wks-define')('observable');\n","\nimport React from 'react'\nimport { MDXTag } from '@mdx-js/tag'\nimport PreviewCodeProvider from '/Users/murdock/lab/blog/dist/client/components/PreviewCodeProvider'\nexport const readingTime = {\"text\":\"7 min read\",\"minutes\":6.035,\"time\":362100,\"words\":1207}\n\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Related reading:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"./component-design\"}}>{`Component design`}</MDXTag></MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The top-level directory structure for Atlaskit looks like the following diagram:`}</MDXTag>\n<div className=\"Doky__Code\" dangerouslySetInnerHTML={{ __html: `<div class=\"Doky__Code line-numbers\">  <pre class=\"language-text\"><code>Atlaskit\n├─ build ·········· Build packages\n├─ docs ··········· Project documentation\n├─ flow-typed ····· Flow types for untyped dependencies\n├─ packages ······· Public packages\n├─ releases ······· Release documentation\n├─ typings ········ Exported Flow / TypeScript types\n├─ website ········ Website package\n└─ package.json ··· Project config</code><span class=\"Doky__CodeLineNumbers\"><span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span></span></pre></div>`}} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"build\"}}>{`Build`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`build`}</MDXTag>{` directory is where all build tooling goes that isn't handled by our tools directly.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://nextjs.org\"}}><MDXTag name=\"img\" components={components} parentName=\"a\" props={{\"src\":\"https://assets.zeit.co/image/upload/v1538361091/repositories/next-js/next-js.png\",\"alt\":\"Next.js\"}}></MDXTag></MDXTag></MDXTag>\n<MDXTag name=\"table\" components={components}>\n<MDXTag name=\"thead\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"thead\">\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Script`}</MDXTag>\n<MDXTag name=\"th\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Description`}</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"tbody\" components={components} parentName=\"table\">\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`yarn dev`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Start dev server. Watching client and server`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`yarn dev:client`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Start compiled dev server. Watchs and compiles only client`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`yarn dev:server`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Compile and watch server, ignoring and not running next`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`yarn dev:css`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Compiles and watch global css`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`yarn compile:server`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Create a build release`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`yarn build`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Create a build release`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`yarn start`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Runs a build release`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"tr\" components={components} parentName=\"tbody\">\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}><MDXTag name=\"inlineCode\" components={components} parentName=\"td\">{`yarn storybook`}</MDXTag></MDXTag>\n<MDXTag name=\"td\" components={components} parentName=\"tr\" props={{\"align\":null}}>{`Runs documentation`}</MDXTag>\n</MDXTag>\n</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"docs\"}}>{`Docs`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docs`}</MDXTag>{` directory is where all project documentation lives. It is displayed on the website under \"Getting started > Documentation\" and is the main source of Atlaskit's documentation.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"packages\"}}>{`Packages`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`packages`}</MDXTag>{` directory is where all of our public NPM packages are contained. Each subfolder is broken down in to another directory that allows us to separate which packages belong to certain teams, and also to make running a subset of build tasks only for certain sets of packages.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It may look something like:`}</MDXTag>\n<div className=\"Doky__Code\" dangerouslySetInnerHTML={{ __html: `<div class=\"Doky__Code line-numbers\">  <pre class=\"language-text\"><code>└─ packages\n  ├─ core\n  ├─ editor\n  ├─ elements\n  └─ media</code><span class=\"Doky__CodeLineNumbers\"><span>1</span><span>2</span><span>3</span><span>4</span><span>5</span></span></pre></div>`}} />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"per-package-structure\"}}>{`Per-package structure`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The structure leading to each package will look something like:`}</MDXTag>\n<div className=\"Doky__Code\" dangerouslySetInnerHTML={{ __html: `<div class=\"Doky__Code line-numbers\">  <pre class=\"language-text\"><code>└─ packages\n  └─ core\n    └─ avatar\n      ├─ dist ··········· Built files, autogenerated\n      ├─ docs ··········· Package-specific documentation\n      ├─ examples ······· Package-specific examples\n      ├─ node_modules ··· NPM dependencies\n      ├─ src ············ Package source\n      ├─ CHANGELOG.md ··· Entire change history for the package\n      ├─ index.js ······· Private entry point for tests\n      ├─ LICENSE ········ Package license\n      └─ package.json ··· NPM package configuration</code><span class=\"Doky__CodeLineNumbers\"><span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span></span></pre></div>`}} />\n<MDXTag name=\"p\" components={components}>{`The details of each directory in each package is explained in greater detail further down.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"dist\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`dist`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dist`}</MDXTag>{` directory contains the bundles we ship to our NPM package. We ship both CommonJS and ES Modules to NPM.`}</MDXTag>\n<div className=\"Doky__Code\" dangerouslySetInnerHTML={{ __html: `<div class=\"Doky__Code line-numbers\">  <pre class=\"language-text\"><code>└─ packages\n  └─ core\n    └─ avatar\n      └─ dist\n        ├─ cjs\n        ├─ esm\n        └─ package.json</code><span class=\"Doky__CodeLineNumbers\"><span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span></span></pre></div>`}} />\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"docs-1\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`docs`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docs`}</MDXTag>{` directory houses the docs specific to the respective package. The docs are written in Markdown and are prefixed with a number to maintain order.`}</MDXTag>\n<div className=\"Doky__Code\" dangerouslySetInnerHTML={{ __html: `<div class=\"Doky__Code line-numbers\">  <pre class=\"language-text\"><code>└─ packages\n  └─ core\n    └─ avatar\n      └─ docs\n        ├─ 01-intro.md\n        └─ 02-another-page.md</code><span class=\"Doky__CodeLineNumbers\"><span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span></span></pre></div>`}} />\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"examples\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`examples`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Like the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`docs`}</MDXTag>{` directory, the purpose of the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`examples`}</MDXTag>{` directory is to document behaviour, but in a much more fine-grained fashion. It shows you an example and the code to create the corresponding example.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When not writing unit tests, this is where you'll spend most of your development time when viewing your components as you write your source code. It's preferable that you write your tests first, but you can have both running at the same time so as you make updates, you can see your test output `}<MDXTag name=\"em\" components={components} parentName=\"p\">{`and`}</MDXTag>{` your component output.`}</MDXTag>\n<div className=\"Doky__Code\" dangerouslySetInnerHTML={{ __html: `<div class=\"Doky__Code line-numbers\">  <pre class=\"language-text\"><code>└─ packages\n  └─ core\n    └─ avatar\n      └─ examples\n        ├─ 01-basic.js\n        └─ 02-another-example.js</code><span class=\"Doky__CodeLineNumbers\"><span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span></span></pre></div>`}} />\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"node_modules\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`node_modules`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is where the NPM packages are kept. Bolt will automatically populate this, you don't have to manually install the dependencies for each package.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"src\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`src`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Each package's source should contain a similar directory structure. Essentially this rule follows the convention that anything that has a default export must be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`CamelCapped`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`camelCased`}</MDXTag>{`. Everything else is `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`dash-cased`}</MDXTag>{`. This rule is expanded into the following that goes into greater detail about how certain things in the structure should look (i.e. styled-components / tests).`}</MDXTag>\n<MDXTag name=\"ol\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`There must always be an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`index.js`}</MDXTag>{` that exports your public API.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Each file that has a default export, must `}<MDXTag name=\"em\" components={components} parentName=\"li\">{`only`}</MDXTag>{` have a default export - no named exports. This simplifies the heuristics to determine a name for the file.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`The file name should be the name of the export. For example, if `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Avatar`}</MDXTag>{` is a default export for a file, the file name should be `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Avatar.js`}</MDXTag>{`. For a HoC, this might look something like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`withAvatar`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`In lieu of a file, you may use a directory with an `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`index.js`}</MDXTag>{` file. For example, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`Avatar/index.js`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Styled components should go in a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`styled.js`}</MDXTag>{` file, or you can use a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`styled/index.js`}</MDXTag>{` file that exports sibling files with default exports that conform to #3 or #4. This should also follow something similar to #6 and have this for every level of components.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ol\">{`Tests should be in a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`__tests__`}</MDXTag>{` that correspond to the level of files you're testing and the type of testing you want to apply. A good rule of thumb is that `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`__tests__`}</MDXTag>{` should be placed under `}<MDXTag name=\"inlineCode\" components={components} parentName=\"li\">{`src`}</MDXTag>{`. In addition, if you write different types of testing, to avoid confusion, you may club tests under subfolders. For further information about testing, please consult this `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"./testing\"}}>{`page`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Your structure may look something like this:`}</MDXTag>\n<div className=\"Doky__Code\" dangerouslySetInnerHTML={{ __html: `<div class=\"Doky__Code line-numbers\">  <pre class=\"language-text\"><code>└─ packages\n  └─ core\n    └─ avatar\n      └─ src\n        ├─ __tests__ ············ Tests for Avatar.js, index.js, styled.js\n        ├─ Avatar ··············· Directory form of Avatar.js\n        │ ├─ __tests__ ·········· Tests for Avatar/index.js\n        | |  ├─ unit ............ Unit tests for Avatar\n          |  ├─ integration ..... Integration tests for Avatar\n          |  ...............\n        │ └─ index.js ··········· Default export for Avatar\n        │ └─ styled ············· Directory for styled components\n        │   ├─ __tests__ ········ Tests for Styled/index.js, MyComponent.js\n        |      ├─ unit ............ Unit tests for Avatar\n        |      ├─ integration ..... Integration tests for Avatar\n        |      ...............\n        │   ├─ index.js ········· Exports MyComponent\n        │   └─ MyComponent.js ··· Exported by index.js\n        ├─ Avatar.js ············ Simpler form of Avatar/index.js\n        ├─ index.js ············· Main entry point\n        ├─ styled.js ············ Simpler form of styled/index.js\n        └─ types.js ············· Type definitions</code><span class=\"Doky__CodeLineNumbers\"><span>1</span><span>2</span><span>3</span><span>4</span><span>5</span><span>6</span><span>7</span><span>8</span><span>9</span><span>10</span><span>11</span><span>12</span><span>13</span><span>14</span><span>15</span><span>16</span><span>17</span><span>18</span><span>19</span><span>20</span><span>21</span><span>22</span></span></pre></div>`}} />\n<MDXTag name=\"p\" components={components}>{`The key difference between the file and directory forms (i.e. `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`styled.js`}</MDXTag>{` vs `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`styled/index.js`}</MDXTag>{`) is how complex your component becomes. What matters here is that consistency is still very close and your imports do not change.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`_`}{`The rules listed above are exhaustive. Anything outside of them are not supported. This includes things like leading underscores (`}<MDXTag name=\"em\" components={components} parentName=\"p\">{`filename.js), underscored names (file_name.js) and dotted names (file.name.js).`}</MDXTag></MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"changelogmd\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`CHANGELOG.md`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The changelog contains all of the relevant changes of the package, over time, in an easy-to-consume format. It also is searchable from the website if you want the changes for a particular version.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"indexjs\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`index.js`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`This `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`index.js`}</MDXTag>{` file exists for Jest so that it can resolve the actual source of the package as opposed to having to build the entire set of packages prior to running tests.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"license\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`LICENSE`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`LICENSE`}</MDXTag>{` file contains the license for each package. Generally this is just the Apache 2 license.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"packagejson\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`package.json`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`package.json`}</MDXTag>{` file contains all the information and configuration that NPM needs to host our package.`}</MDXTag>\n<MDXTag name=\"h4\" components={components} props={{\"id\":\"readmemd\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"h4\">{`README.md`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`README.md`}</MDXTag>{` file contains a introduction for each package.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"releases\"}}>{`Releases`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Contains the documentation for releases containing significant changes along with any migration guides.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"website\"}}>{`Website`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The Atlaskit website is how we dogfood our components and also serves as our public documentation.`}</MDXTag>\n           </MDXTag>\n  }\n}\nexport const tableOfContents = (components={}) => [\n  {\n    id: \"build\",\n    level: 2,\n    title: \"Build\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"docs\",\n    level: 2,\n    title: \"Docs\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"packages\",\n    level: 2,\n    title: \"Packages\",\n    children: [\n        {\n              id: \"per-package-structure\",\n              level: 3,\n              title: \"Per-package structure\",\n              children: [\n                      \n                    ]\n            }\n      ]\n  },\n{\n    id: \"releases\",\n    level: 2,\n    title: \"Releases\",\n    children: [\n        \n      ]\n  },\n{\n    id: \"website\",\n    level: 2,\n    title: \"Website\",\n    children: [\n        \n      ]\n  }\n]\n"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACNA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACnBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AChBA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACxxBA;AACA;AACA;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACRA;AACA;AACA;;;;;;;;;;;;ACFA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACCA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAEA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAGA;AACA;;;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAEA;AAHA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAsgBA;AACA;AACA;AACA;AAJA;AASA;AACA;AACA;AACA;AAJA;AAxCA;;;;A","sourceRoot":""}